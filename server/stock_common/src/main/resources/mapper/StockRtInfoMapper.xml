<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.itheima.stock.pojo.entity.StockRtInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
            <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
            <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
            <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
            <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
            <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
            <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,stock_name,
        pre_close_price,open_price,cur_price,
        min_price,max_price,trade_amount,
        trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="getNewestStockInfo" resultType="com.itheima.stock.pojo.domain.StockUpdownDomain">
        select
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price-sri.min_price)/sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as  name,
            sri.cur_time as curDate,
            sri.trade_volume as tradeVol,
            sri.cur_price-sri.pre_close_price as increase,
            (sri.cur_price-sri.pre_close_price) /pre_close_price as upDown,
            sri.cur_price as tradePrice
        from stock_rt_info as   sri
        where sri.cur_time=#{timePoint}
        order by upDown desc
    </select>
    <select id="getStockFourInfo" resultType="com.itheima.stock.pojo.domain.StockUpdownDomain">
        select
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price-sri.min_price)/sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as  name,
            sri.cur_time as curDate,
            sri.trade_volume as tradeVol,
            sri.cur_price-sri.pre_close_price as increase,
            (sri.cur_price-sri.pre_close_price) /pre_close_price as upDown,
            sri.cur_price as tradePrice
        from stock_rt_info as   sri
        where sri.cur_time=#{timePoint}
        order by upDown desc

    </select>
    <select id="getStockUpdownCount" resultType="java.util.Map">
        select
        date_format(tmp.time,'%Y%m%d%H%i') as time ,
        count(*) as count
        from (select
        (sri.cur_price-sri.pre_close_price)/sri.pre_close_price as ud,
        sri.cur_time as time
        from stock_rt_info sri
        where sri.cur_time BETWEEN #{openTime} and #{curTime}
        having ud
        <if test="flag==1">
            >=0.1
        </if>
        <if test="flag==0">
            &lt;=-0.1
        </if>
        )
        as tmp
        group by tmp.time
        order by tmp.time asc
    </select>
    <select id="getIncreaseRangeInfoByDate" resultType="java.util.Map">
        select
        tmp2.title,
        count(*) as count
        from
        (
        select
        case
        when tmp.rate > 0.07 then '>7%'
        when tmp.rate > 0.05 and tmp.rate &lt;= 0.07 then '5~7%'
        WHEN tmp.rate > 0.03  AND tmp.rate &lt;= 0.05 THEN '3~5%'
        WHEN tmp.rate > 0     AND tmp.rate &lt;= 0.03 THEN '0~3%'
        WHEN tmp.rate > -0.03 AND tmp.rate &lt;= 0 THEN '-3~0%'
        WHEN tmp.rate > -0.05 AND tmp.rate &lt;= -0.03 THEN '-5~-3%'
        WHEN tmp.rate > -0.07 AND tmp.rate &lt;= -0.05 THEN '-7~-5%'
        ELSE '&lt;-7%'
        end 'title'
        from(
        select
        (sri.cur_price-sri.pre_close_price)/sri.pre_close_price as rate
        from
        stock_rt_info as sri
        where
        sri.cur_time = #{dateTime}
        ) as tmp
        ) as tmp2 group by tmp2.title
    </select>
    <select id="getStock4MinuteInfo" resultType="com.itheima.stock.pojo.domain.Stock4MinuteDomain">
        select
            sri.cur_time    as date,
            sri.trade_amount as tradeAmt,
            sri.stock_code as code,
            sri.min_price as lowPrice,
            sri.pre_close_price as preClosePrice,
            sri.stock_name as name,
            sri.max_price as highPrice,
            sri.open_price as openPrice,
            sri.trade_volume as tradeVol,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.stock_code=#{stockCode}
          and sri.cur_time between #{openDate} and #{endDate}
    </select>
    <select id="getStock4DkLine" resultType="com.itheima.stock.pojo.domain.Stock4EvrDayDomain">
        select
             sri.cur_time as date,
             sri.trade_amount as tradeAmt,
             sri.stock_code as code,
             sri.min_price as lowPrice,
             sri.stock_name as name,
             sri.max_price as highPrice,
             sri.open_price as openPrice,
             sri.trade_volume as tradeVol,
             sri.cur_price as closePrice,
             sri.pre_close_price as preClosePrice
        from stock_rt_info as sri
        where sri.stock_code = #{stockCode}
            and sri.cur_time in (
            select
            max(cur_time) as mxTime
            from
            stock_rt_info
            where stock_code = #{stockCode}
            and cur_time between #{startDate} and #{endDate}
            group by date_format(cur_time,'%Y%m%d')
            )
        order by date asc
    </select>
    <select id="getCloseDates" resultType="java.util.Date">
        select
            max(sri.cur_time) as closeDate
        from stock_rt_info as sri
        where sri.stock_code = #{stockCode} and sri.cur_time between #{startDate} and #{endDate}
        group by date_format(sri.cur_time,'%Y%m%d')
    </select>
    <select id="getStockCreenDkLineData" resultType="com.itheima.stock.pojo.domain.Stock4EvrDayDomain">
        select
        sri2.cur_time     as date,
        sri2.trade_amount as tradeAmt,
        sri2.stock_code as code,
        sri2.min_price as lowPrice,
        sri2.stock_name as name,
        sri2.max_price as highPrice,
        sri2.open_price as openPrice,
        sri2.trade_volume as tradeVol,
        sri2.cur_price as closePrice,
        sri2.pre_close_price as preClosePrice
        from stock_rt_info as sri2
        where sri2.stock_code=#{stockCode} and sri2.cur_time in
        <foreach collection="dates" item="date" open="(" close=")" separator=",">
            #{date}
        </foreach>
        order by sri2.cur_time;
    </select>
    <select id="getStockWeekInfoByCode" resultType="com.itheima.stock.pojo.domain.Stock4EvrWeekDomain">
        SET @cur_date := #{curDate};
        SET @current_day := DAYOFWEEK(@cur_date);
        SET @closing_time := NULL;
        SET @closing_price := NULL;
        SET @closing_time :=
        CASE
        WHEN @current_day = 5 AND TIME(@cur_date) &lt; '15:00:00' THEN @cur_date
        WHEN @current_day IN (1, 7) THEN DATE_SUB(@cur_date, INTERVAL IF(@current_day = 1, 2, 1) DAY) + INTERVAL '15:00:00' HOUR_MINUTE
        ELSE @cur_date
        END;
        SET @closing_price := (SELECT cur_price FROM stock_rt_info WHERE cur_time = @closing_time LIMIT 1);

        SELECT
        AVG(cur_price) AS avgPrice,
        MIN(cur_price) AS minPrice,
        round(COALESCE((SELECT cur_price FROM stock_rt_info WHERE cur_time = DATE_SUB(@closing_time, INTERVAL 1 WEEK) LIMIT 1), 0.0),4) AS openPrice,
        MAX(cur_price) AS maxPrice,
        round(COALESCE(@closing_price, 0.0),4) AS closePrice,
        MAX(cur_time) AS mxTime,
        stock_code AS stockCode
        FROM
        stock_rt_info
        WHERE
        stock_code = #{stockCode} AND cur_time >= DATE_SUB(@closing_time, INTERVAL 1 YEAR) AND cur_time &lt;= @closing_time
        GROUP BY
        YEARWEEK(cur_time, 1);
    </select>
    <select id="getStockLatestTS" resultType="com.itheima.stock.pojo.domain.StockLatestTSDomain">
        select sri.trade_amount as tradeAmt,
               sri.pre_close_price as preClosePrice,
               sri.min_price as lowPrice,
               sri.max_price as highPrice,
               sri.open_price as openPrice,
               sri.trade_volume as tradeVol,
               sri.cur_price as tradePrice,
               sri.cur_time as curDate
        from stock_rt_info as sri where stock_code = #{code}
        order by sri.cur_time desc
        limit 1

    </select>
    <select id="getLiveTradingPipelineByCode" resultType="java.util.Map">
        select
            DATE_FORMAT(sri.cur_time, '%Y-%m-%d-%H:%i') AS date,
            sri.trade_amount as tradeAmt,
            sri.trade_volume as tradeVol,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        WHERE
            stock_code = #{code}

    </select>
    <select id="getStockPageInfoByMultiCondition" resultType="com.itheima.stock.pojo.domain.UserInfoDomain">
        SELECT
        u.id ,
        u.username,
        u.password,
        u.phone,
        u.real_name as realName,
        u.nick_name as nickName,
        u.email,
        u.status,
        u.sex,
        u.deleted,
        u.create_id as createId,
        u.update_id as updateId,
        u.create_where as createWhere,
        u.create_time as createTime,
        u.update_time as updateTime,
        c.username AS createUserName,
        u2.username AS updateUserName
        FROM
        sys_user u
        LEFT JOIN
        sys_user c ON u.create_id = c.id
        LEFT JOIN
        sys_user u2 ON u.update_id = u2.id

    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.itheima.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values (#{id,jdbcType=BIGINT},#{stockCode,jdbcType=CHAR},#{stockName,jdbcType=VARCHAR}
        ,#{preClosePrice,jdbcType=DECIMAL},#{openPrice,jdbcType=DECIMAL},#{curPrice,jdbcType=DECIMAL}
        ,#{minPrice,jdbcType=DECIMAL},#{maxPrice,jdbcType=DECIMAL},#{tradeAmount,jdbcType=BIGINT}
        ,#{tradeVolume,jdbcType=DECIMAL},#{curTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.itheima.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="stockCode != null">stock_code,</if>
                <if test="stockName != null">stock_name,</if>
                <if test="preClosePrice != null">pre_close_price,</if>
                <if test="openPrice != null">open_price,</if>
                <if test="curPrice != null">cur_price,</if>
                <if test="minPrice != null">min_price,</if>
                <if test="maxPrice != null">max_price,</if>
                <if test="tradeAmount != null">trade_amount,</if>
                <if test="tradeVolume != null">trade_volume,</if>
                <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="stockCode != null">#{stockCode,jdbcType=CHAR},</if>
                <if test="stockName != null">#{stockName,jdbcType=VARCHAR},</if>
                <if test="preClosePrice != null">#{preClosePrice,jdbcType=DECIMAL},</if>
                <if test="openPrice != null">#{openPrice,jdbcType=DECIMAL},</if>
                <if test="curPrice != null">#{curPrice,jdbcType=DECIMAL},</if>
                <if test="minPrice != null">#{minPrice,jdbcType=DECIMAL},</if>
                <if test="maxPrice != null">#{maxPrice,jdbcType=DECIMAL},</if>
                <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
                <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <insert id="insertBatch">
            INSERT INTO stock_rt_info
            (id, stock_code, stock_name, pre_close_price, open_price, cur_price,
            min_price, max_price, trade_amount, trade_volume, cur_time)
            VALUES
            <foreach collection="list" item="info" separator=",">
                (#{info.id,jdbcType=BIGINT}, #{info.stockCode,jdbcType=CHAR}, #{info.stockName,jdbcType=VARCHAR},
                #{info.preClosePrice,jdbcType=DECIMAL}, #{info.openPrice,jdbcType=DECIMAL}, #{info.curPrice,jdbcType=DECIMAL},
                #{info.minPrice,jdbcType=DECIMAL}, #{info.maxPrice,jdbcType=DECIMAL}, #{info.tradeAmount,jdbcType=BIGINT},
                #{info.tradeVolume,jdbcType=DECIMAL}, #{info.curTime,jdbcType=TIMESTAMP})
            </foreach>
            ON DUPLICATE KEY UPDATE
            stock_code = VALUES(stock_code), stock_name = VALUES(stock_name),
            pre_close_price = VALUES(pre_close_price), open_price = VALUES(open_price),
            cur_price = VALUES(cur_price), min_price = VALUES(min_price),
            max_price = VALUES(max_price), trade_amount = VALUES(trade_amount),
            trade_volume = VALUES(trade_volume), cur_time = VALUES(cur_time)

    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.itheima.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        <set>
                <if test="stockCode != null">
                    stock_code = #{stockCode,jdbcType=CHAR},
                </if>
                <if test="stockName != null">
                    stock_name = #{stockName,jdbcType=VARCHAR},
                </if>
                <if test="preClosePrice != null">
                    pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
                </if>
                <if test="openPrice != null">
                    open_price = #{openPrice,jdbcType=DECIMAL},
                </if>
                <if test="curPrice != null">
                    cur_price = #{curPrice,jdbcType=DECIMAL},
                </if>
                <if test="minPrice != null">
                    min_price = #{minPrice,jdbcType=DECIMAL},
                </if>
                <if test="maxPrice != null">
                    max_price = #{maxPrice,jdbcType=DECIMAL},
                </if>
                <if test="tradeAmount != null">
                    trade_amount = #{tradeAmount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=DECIMAL},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.itheima.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        set 
            stock_code =  #{stockCode,jdbcType=CHAR},
            stock_name =  #{stockName,jdbcType=VARCHAR},
            pre_close_price =  #{preClosePrice,jdbcType=DECIMAL},
            open_price =  #{openPrice,jdbcType=DECIMAL},
            cur_price =  #{curPrice,jdbcType=DECIMAL},
            min_price =  #{minPrice,jdbcType=DECIMAL},
            max_price =  #{maxPrice,jdbcType=DECIMAL},
            trade_amount =  #{tradeAmount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=DECIMAL},
            cur_time =  #{curTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
